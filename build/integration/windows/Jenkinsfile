pipeline {
  agent {
    label 'windows'
  }

  tools {
    jdk 'temurin-jdk-21.0.3.9'
    maven '3.9'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '2'))
    disableConcurrentBuilds()
  }

  parameters {
    string(name: 'engineDownloadUrl', defaultValue: 'https://jenkins.ivyteam.io/job/core_product-engine/job/master/lastSuccessfulBuild/artifact/workspace/ch.ivyteam.ivy.server.product/target/products/*_Slim_*.zip/*zip*/products.zip', description: 'engine that will be packaged')
  }

  triggers {
    cron '@midnight'
  }

  stages {
    stage('Build') {
      steps {
        nodejs(nodeJSInstallationName: '20.10.0') {
          bat 'yarn update:axonivy:next'
          bat 'yarn install'
          bat 'yarn build:production'
          bat 'yarn download:engine ' + params.engineDownloadUrl
        }
      }
    }

    stage('Playwright Tests') {
      steps {
        nodejs(nodeJSInstallationName: '20.10.0') {
          catchError(buildResult: 'UNSTABLE', stageResult: 'UNSTABLE') {
            bat 'set JAVA_OPTS_IVY_SYSTEM=-Divy.engine.testheadless=true'
            bat 'start extension/AxonIvyEngine/bin/AxonIvyEngine.exe'
            bat 'yarn test:playwright:download:vscode'
            bat 'yarn test:playwright'
            bat 'start extension/AxonIvyEngine/bin/AxonIvyEngine.exe stop'
          }
          archiveArtifacts artifacts: '**/playwright/playwright-videos/**', allowEmptyArchive: true
          withChecks('WebTests') {
            junit testDataPublishers: [[$class: 'StabilityTestDataPublisher']], testResults: '**/node_modules/**/report.xml'
          }
        }
      }
    }
  }

  post {
    success {
      catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
        cleanWs()
      }
    }
  }
}
