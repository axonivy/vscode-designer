pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '2'))
    disableConcurrentBuilds()
  }

  triggers {
    cron '@midnight'
  }

  parameters {
    string(name: 'engineDownloadUrl', defaultValue: 'https://jenkins.ivyteam.io/job/core_product-engine/job/master/lastSuccessfulBuild/artifact/workspace/ch.ivyteam.ivy.server.product/target/products/*_Slim_*.zip/*zip*/products.zip', description: 'engine that will be packaged')
    string(name: 'openvscodeVersion', defaultValue: 'v1.98.0', description: 'openvscode version that will be used')
  }

  stages {
    stage('Integration Test') {
      steps {
        script {
          docker.build('node-webtest', '-f build/integration/openvscode-server/Dockerfile .').inside {
            sh """
            npm run update:axonivy:next
            npm install
            npm run build:production
            npm run download:engine ${params.engineDownloadUrl}
            wget https://github.com/gitpod-io/openvscode-server/releases/download/openvscode-server-${params.openvscodeVersion}/openvscode-server-${params.openvscodeVersion}-linux-x64.tar.gz
            tar -xzf openvscode-server-${params.openvscodeVersion}-linux-x64.tar.gz
            cp -r extension/. openvscode-server-${params.openvscodeVersion}-linux-x64/extensions/extension
            nohup extension/AxonIvyEngine/bin/AxonIvyEngine &
            nohup openvscode-server-${params.openvscodeVersion}-linux-x64/bin/openvscode-server --host 0.0.0.0 --without-connection-token --disable-workspace-trust &
            """
            catchError(buildResult: 'UNSTABLE', stageResult: 'UNSTABLE') {
              sh 'npm run test:playwright:browser'
            }
          }
          archiveArtifacts artifacts: '**/playwright/test-results/**', allowEmptyArchive: true
          archiveArtifacts artifacts: 'extension/AxonIvyEngine/logs/ivy.log', allowEmptyArchive: true
          withChecks('WebTests') {
            junit testDataPublishers: [[$class: 'StabilityTestDataPublisher']], testResults: '**/node_modules/**/report.xml'
          }
        }
      }
    }
  }

  post {
    success {
      cleanWs()
    }
  }
} 
