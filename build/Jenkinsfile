pipeline {
  agent {
    dockerfile {
      filename 'build/Dockerfile'
    }
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '2'))
  }

  triggers {
    cron '@midnight'
    upstream(upstreamProjects: "core_product-engine/${env.BRANCH_NAME},process-editor-client/${env.BRANCH_NAME}", threshold: hudson.model.Result.UNSTABLE)
  }

  parameters {
    string(name: 'engineDownloadUrl', defaultValue: 'https://jenkins.ivyteam.io/job/core_product-engine/job/master/lastSuccessfulBuild/artifact/workspace/ch.ivyteam.ivy.server.product/target/products/*_Slim_*.zip/*zip*/products.zip', description: 'engine that will be packaged')
  }

  stages {
    stage('Build') {
      steps {
        script {
          sh 'yarn update:axonivy:next'
          sh 'yarn install'
          sh 'yarn build:production'
        }
      }
    }

    stage('Codechecks (ESLint)') {
      steps {
        script {
          catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            timeout(30) {
              sh 'yarn lint:ci'
            }
          }
          withChecks('ESLint') {
            recordIssues enabledForFailure: true, publishAllIssues: true, aggregatingResults: true, tools: [esLint(pattern: '**/eslint.xml,webviews/**/eslint.xml', skipSymbolicLinks: true)], qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true]]
          }
        }
      }
    }

    stage('Package') {
      steps {
        script {
          sh 'yarn download:engine ' + params.engineDownloadUrl
          sh 'yarn package'
          archiveArtifacts '*.vsix'
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
} 
