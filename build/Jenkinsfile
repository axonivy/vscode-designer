pipeline {
  agent {
    dockerfile {
      dir 'build'
    }
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '2'))
  }

  triggers {
    cron '@midnight'
  }

  parameters {
    string(name: 'engineDownloadUrl', defaultValue: 'https://jenkins.ivyteam.io/job/core_product/job/master/lastSuccessfulBuild/artifact/workspace/ch.ivyteam.ivy.server.product/target/products/*_Slim_*.zip/*zip*/products.zip', description: 'engine that will be packaged')
  }

  stages {
    stage('Build') {
      steps {
        script {
          sh 'yarn update:axonivy:next'
          sh 'yarn install --ignore-scripts && yarn clean'
          sh 'yarn build:production'
        }
      }
    }

    stage('Codechecks (ESLint)') {
      steps {
        script {
          catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            timeout(30) {
              sh 'yarn lint -o eslint.xml -f checkstyle'
            }
          }
        }
      }
    }

    stage('Playwright Test') {
      steps {
        script {
          sh 'yarn download:engine ' + params.engineDownloadUrl
          // sh 'xvfb-run --auto-servernum --server-args="-screen 0, 1600x900x24" yarn test:playwright'
          // sh 'xvfb-run -a yarn test:playwright'
          sh 'yarn test:playwright'
        }
      }
    }

    stage('Package') {
      steps {
        script {
          sh 'yarn download:engine ' + params.engineDownloadUrl
          sh 'yarn package'
          archiveArtifacts 'vscode-extensions/**/*.vsix'
        }
      }
    }
  }
} 
